services:
  database:
    image: postgres:latest
    container_name: networking-postgres-server
    restart: always
    expose:
      - 5432
    env_file:
      - .env
    volumes:
      - ./database/data-postgres:/var/lib/postgresql/data
    environment:
      - TZ=Asia/Kolkata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DATABASE}'"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - networking-app

  backend:
    container_name: networking-backend-server
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 7000:8000
    env_file:
      - .env
    depends_on:
      - database
    working_dir: /networking-project/backend/
    command: >
      bash -c "
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000 --noreload"
    environment:
      - TZ=Asia/Kolkata
      - POSTGRES_HOST=networking-postgres-server
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - networking-app

networks:
  networking-app:

volumes:
  logs-volumes:
